{"version":3,"sources":["components/Quotes.js","components/Button.js","components/Link.js","App.js","reportWebVitals.js","index.js"],"names":["Quotes","props","style","className","id","content","author","Button","disabled","onClick","onclick","text","Link","target","rel","href","App","useState","quote","setQuote","index","setIndex","opacity","setOpacity","setDisabled","styleclass","getRandomQuote","fetch","then","response","json","data","catch","error","console","log","generateIndex","Math","floor","random","length","useEffect","backgroundColor","color","setTimeout","fontSize","marginTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAWeA,G,MATA,SAACC,GACd,OACE,sBAAKC,MAAOD,EAAMC,MAAOC,UAAU,OAAnC,UACE,uBAAMC,GAAG,OAAT,UAAgB,mBAAGD,UAAU,sBAAyBF,EAAMI,WAC5D,oBAAGD,GAAG,SAAN,eAAkBH,EAAMK,eCEfC,EANA,SAACN,GACd,OACE,wBAAQO,SAAUP,EAAMO,SAAUN,MAAOD,EAAMC,MAAOC,UAAU,SAASC,GAAG,YAAYK,QAASR,EAAMS,QAAvG,SAAiHT,EAAMU,QCI5GC,EANF,SAACX,GACZ,OACE,mBAAGC,MAAOD,EAAMC,MAAOC,UAAU,OAAOC,GAAG,cAAcS,OAAO,SAASC,IAAI,aAAaC,KAAK,kCAA/F,SAAiI,mBAAGZ,UAAU,sBCwDnIa,MAtDf,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGaF,mBAAS,MAHtB,mBAGNG,EAHM,KAGCC,EAHD,OAIiBJ,mBAAS,KAJ1B,mBAINK,EAJM,KAIGC,EAJH,OAKmBN,oBAAS,GAL5B,mBAKNT,EALM,KAKIgB,EALJ,OAMuBP,mBAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YANpI,mBAMNQ,EANM,KAQPC,GARO,KAQU,WACrBC,MAAM,kCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJZ,EAASY,GACTR,EAAW,KACXC,GAAY,MAEbQ,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAIVG,EAAgB,WACpB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWd,EAAWe,SAiB/C,OAdAC,qBAAU,WACRf,IACAL,EAASe,OACR,IAYD,sBAAKlC,MAAO,CAACwC,gBAAiBjB,EAAWL,GAAQuB,MAAOlB,EAAWL,IAASjB,UAAU,YAAtF,UACE,oBAAIC,GAAG,SAAP,qCACA,sBAAKD,UAAU,YAAYC,GAAG,YAA9B,UACE,cAAC,EAAD,CAAQF,MAAO,CAACoB,QAASA,GAAUjB,QAASa,EAAMb,QAASC,OAAQY,EAAMZ,SACzE,sBAAKH,UAAU,iBAAf,UACA,cAAC,EAAD,CAAMD,MAAO,CAACwC,gBAAiBjB,EAAWL,MAC1C,cAAC,EAAD,CAAQZ,SAAUA,EAAUN,MAAO,CAACwC,gBAAiBjB,EAAWL,IAASV,QAhB3D,WACFkC,YAAW,WACzBlB,MACC,KACHL,EAASe,KACTb,EAAW,KACXC,GAAY,IAUuFb,KAAK,oBAGtG,wBAAQT,MAAO,CAACyC,MAAO,QAASE,SAAU,OAAQC,UAAW,QAAS1C,GAAG,SAAzE,qCC3CS2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e45d7fde.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Quotes = (props) => {\r\n  return (\r\n    <div style={props.style} className=\"text\">\r\n      <span id=\"text\"><i className=\"fas fa-quote-left\"></i>{props.content}</span>\r\n      <p id=\"author\">- {props.author}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Quotes;\r\n","import React from \"react\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button disabled={props.disabled} style={props.style} className=\"button\" id=\"new-quote\" onClick={props.onclick}>{props.text}</button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst Link = (props) => {\r\n  return (\r\n    <a style={props.style} className=\"link\" id=\"tweet-quote\" target=\"_blank\" rel=\"noreferrer\" href=\"http://twitter.com/intent/tweet\"><i className=\"fab fa-twitter\"></i></a>\r\n  );\r\n}\r\n\r\nexport default Link;\r\n","import './App.css';\nimport Quotes from \"./components/Quotes.js\";\nimport React, {useState, useEffect} from \"react\";\nimport Button from \"./components/Button.js\";\nimport Link from \"./components/Link.js\";\n\nfunction App() {\n\n  const [quote, setQuote] = useState(\"\");\n  const [index, setIndex] = useState(null);\n  const [opacity, setOpacity] = useState(\"0\");\n  const [disabled, setDisabled] = useState(true);\n  const [styleclass, setStyleClass] = useState([\"#E74B3C\", \"#9B59B6\", \"#342224\", \"#77B1A9\", \"#FB6964\", \"#2C3E50\", \"#BDBB99\", \"#472E32\", \"#73A857\", \"#F39C12\"]);\n\n  const getRandomQuote = () => {\n    fetch(\"https://api.quotable.io/random\")\n    .then(response => response.json())\n    .then(data => {\n      setQuote(data);\n      setOpacity(\"1\");\n      setDisabled(false);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n  }\n\n  const generateIndex = () => {\n    return Math.floor(Math.random() * styleclass.length);\n  }\n\n  useEffect(() => {\n    getRandomQuote();\n    setIndex(generateIndex());\n  }, []);\n\n  const updateQuote = () => {\n    const timeout = setTimeout(() => {\n      getRandomQuote();\n    }, 375);\n    setIndex(generateIndex());\n    setOpacity(\"0\");\n    setDisabled(true);\n  }\n\n  return (\n    <div style={{backgroundColor: styleclass[index], color: styleclass[index]}} className=\"container\" >\n      <h1 id=\"header\">Random Quotes Generator</h1>\n      <div className=\"quote-box\" id=\"quote-box\">\n        <Quotes style={{opacity: opacity}} content={quote.content} author={quote.author} />\n        <div className=\"link-container\">\n        <Link style={{backgroundColor: styleclass[index]}} />\n        <Button disabled={disabled} style={{backgroundColor: styleclass[index]}} onclick={updateQuote} text=\"New Quote\" />\n        </div>\n      </div>\n      <footer style={{color: \"white\", fontSize: \"11px\", marginTop: \"13px\"}} id=\"footer\">by Paolo Provveduto</footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}