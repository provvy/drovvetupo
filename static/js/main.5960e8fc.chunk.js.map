{"version":3,"sources":["components/Quotes.js","components/Button.js","components/Link.js","App.js","reportWebVitals.js","index.js"],"names":["Quotes","props","className","id","content","author","Button","style","onClick","onclick","text","Link","target","href","App","useState","quote","setQuote","index","setIndex","animationState","setAnimationState","styleclass","getRandomQuote","fetch","then","response","json","data","generateIndex","catch","error","console","log","Math","floor","random","length","useEffect","backgroundColor","color","animationPlayState","fontSize","marginTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAWeA,G,MATA,SAACC,GACd,OACE,sBAAKC,UAAU,OAAf,UACE,uBAAMC,GAAG,OAAT,UAAgB,mBAAGD,UAAU,sBAAyBD,EAAMG,WAC5D,oBAAGD,GAAG,SAAN,eAAkBF,EAAMI,eCEfC,EANA,SAACL,GACd,OACE,wBAAQM,MAAON,EAAMM,MAAOL,UAAU,SAASC,GAAG,YAAYK,QAASP,EAAMQ,QAA7E,SAAuFR,EAAMS,QCIlFC,EANF,SAACV,GACZ,OACE,mBAAGM,MAAON,EAAMM,MAAOL,UAAU,OAAOC,GAAG,cAAcS,OAAO,SAASC,KAAK,2BAA9E,SAAyG,mBAAGX,UAAU,sBCiD3GY,MA/Cf,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGaF,mBAAS,MAHtB,mBAGNG,EAHM,KAGCC,EAHD,OAI+BJ,mBAAS,UAJxC,mBAINK,EAJM,KAIUC,EAJV,OAKuBN,mBAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YALpI,mBAKNO,EALM,KAOPC,GAPO,KAOU,WACrBC,MAAM,kCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJX,EAASW,GACTT,EAASU,KACTR,EAAkB,cAEnBS,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAIVF,EAAgB,WACpB,OAAOK,KAAKC,MAAMD,KAAKE,SAAWd,EAAWe,SAW/C,OARAC,qBAAU,WACRf,MACC,IAOD,sBAAKhB,MAAO,CAACgC,gBAAiBjB,EAAWJ,GAAQsB,MAAOlB,EAAWJ,GAAQuB,mBAAoBrB,GAAiBlB,UAAU,YAA1H,UACE,wCACA,sBAAKA,UAAU,YAAYC,GAAG,YAA9B,UACE,cAAC,EAAD,CAAQC,QAASY,EAAMZ,QAASC,OAAQW,EAAMX,SAC9C,sBAAKH,UAAU,iBAAf,UACA,cAAC,EAAD,CAAMK,MAAO,CAACgC,gBAAiBjB,EAAWJ,MAC1C,cAAC,EAAD,CAAQX,MAAO,CAACgC,gBAAiBjB,EAAWJ,IAAST,QAXvC,WAClBc,KAU+Eb,KAAK,oBAGlF,wBAAQH,MAAO,CAACiC,MAAO,QAASE,SAAU,OAAQC,UAAW,QAASxC,GAAG,SAAzE,qCCpCSyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5960e8fc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Quotes = (props) => {\r\n  return (\r\n    <div className=\"text\">\r\n      <span id=\"text\"><i className=\"fas fa-quote-left\"></i>{props.content}</span>\r\n      <p id=\"author\">- {props.author}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Quotes;\r\n","import React from \"react\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button style={props.style} className=\"button\" id=\"new-quote\" onClick={props.onclick}>{props.text}</button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst Link = (props) => {\r\n  return (\r\n    <a style={props.style} className=\"link\" id=\"tweet-quote\" target=\"_blank\" href=\"twitter.com/intent/tweet\"><i className=\"fab fa-twitter\"></i></a>\r\n  );\r\n}\r\n\r\nexport default Link;\r\n","import './App.css';\nimport Quotes from \"./components/Quotes.js\";\nimport React, {useState, useEffect} from \"react\";\nimport Button from \"./components/Button.js\";\nimport Link from \"./components/Link.js\";\n\nfunction App() {\n\n  const [quote, setQuote] = useState(\"\");\n  const [index, setIndex] = useState(null);\n  const [animationState, setAnimationState] = useState(\"paused\");\n  const [styleclass, setStyleClass] = useState([\"#E74B3C\", \"#9B59B6\", \"#342224\", \"#77B1A9\", \"#FB6964\", \"#2C3E50\", \"#BDBB99\", \"#472E32\", \"#73A857\", \"#F39C12\"]);\n\n  const getRandomQuote = () => {\n    fetch(\"https://api.quotable.io/random\")\n    .then(response => response.json())\n    .then(data => {\n      setQuote(data);\n      setIndex(generateIndex());\n      setAnimationState(\"running\");\n    })\n    .catch(error => {\n      console.log(error);\n    });\n  }\n\n  const generateIndex = () => {\n    return Math.floor(Math.random() * styleclass.length);\n  }\n\n  useEffect(() => {\n    getRandomQuote();\n  }, []);\n\n  const updateQuote = () => {\n    getRandomQuote();\n  }\n\n  return (\n    <div style={{backgroundColor: styleclass[index], color: styleclass[index], animationPlayState: animationState}} className=\"container\" >\n      <h1>TITOLO</h1>\n      <div className=\"quote-box\" id=\"quote-box\">\n        <Quotes content={quote.content} author={quote.author} />\n        <div className=\"link-container\">\n        <Link style={{backgroundColor: styleclass[index]}} />\n        <Button style={{backgroundColor: styleclass[index]}} onclick={updateQuote} text=\"New Quote\" />\n        </div>\n      </div>\n      <footer style={{color: \"white\", fontSize: \"11px\", marginTop: \"13px\"}} id=\"footer\">by Paolo Provveduto</footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}